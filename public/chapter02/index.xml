<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chapter02s on Computergrafik MIB</title>
    <link>https://simonstorlschulke.github.io/cg-mib-2/chapter02/</link>
    <description>Recent content in Chapter02s on Computergrafik MIB</description>
    <generator>Hugo</generator>
    <language>de</language>
    <atom:link href="https://simonstorlschulke.github.io/cg-mib-2/chapter02/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2. Prozedurales Gelände</title>
      <link>https://simonstorlschulke.github.io/cg-mib-2/chapter02/exercise01_a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://simonstorlschulke.github.io/cg-mib-2/chapter02/exercise01_a/</guid>
      <description>Im letzten Kapitel haben wir damit begonnen, een Script zu schreiben, welches uns eine prozedurale Landschaft generiert. Damit wollen wir nun weitermachen.&#xA;2.1 Normalen berechnen Beim letzten mal haben wir mit unserem Code sehr kleinteilig direkt auf den Meshdaten gearbeitet. Dazu nutzten wir Godots ArrayMesh-Datentyp. Godot bietet uns jedoch auch ausgereiftere Tools um mit Meshes zu arbeiten. Generell ist es ratsam bereits in einer Engine existierende Funktionalität nicht neu zu erfinden.</description>
    </item>
    <item>
      <title>Übung 1 - Basics</title>
      <link>https://simonstorlschulke.github.io/cg-mib-2/chapter02/exercise01_b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://simonstorlschulke.github.io/cg-mib-2/chapter02/exercise01_b/</guid>
      <description></description>
    </item>
  </channel>
</rss>
